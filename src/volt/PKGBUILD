
name=volt
depends=()
src_depends=(gvm)

required_major_version=1
required_minor_version=11
required_patch_version=1
repo_url='github.com/vim-volt/volt'

update() {
  :
}

build() {
  install_go && go get -d $repo_url
}

package() {
  install_go && go install $repo_url
  volt get -l
}

install_go() {
  if ! check_go_cmd || ! check_version; then
    local major=$required_major_version
    local minor=$required_minor_version
    local patch=$required_patch_version
    local go=go$major.$minor.$patch
    if [[ -s "$HOME/.gvm/scripts/gvm" ]]; then
      set +u
      source "$HOME/.gvm/scripts/gvm"
      GO111MODULE=off gvm install $go
      GO111MODULE=off gvm use $go
      set -u
      echo
      banner "Please run 'gvm use $go --default' in your shell."
      echo
    else
      echo 'ERROR: gvm is not installed' >&2
      return 1
    fi
  fi
}

banner() {
  local str=$1
  local width=$((${#str} + 6))
  local line
  line=$(perl -E 'print(q(!) x shift)' $width)
  echo "$line"
  echo "!! $str !!"
  echo "$line"
}

check_go_cmd() {
  if ! type go >/dev/null 2>&1; then
    echo "'go' command is not installed" >&2
    return 1
  fi
  return 0
}

check_version() {
  local version=$(go version | sed -E 's/go version go([0-9.]+).*/\1/')
  local vers=$(echo "$version" | tr '.' ' ')
  local major=$required_major_version
  local minor=$required_minor_version
  local patch=$required_patch_version
  if ! perl -E "exit(\$ARGV[0] >= $major && \$ARGV[1] >= $minor && \$ARGV[2] >= $patch ? 0 : 1)" $vers; then
    echo "go version is not $major.$minor.$patch or higher" >&2
    return 2
  fi
  return 0
}
